import dotenv from 'dotenv';
import express, { Request, Response } from 'express';
import cors from 'cors';
import morgan from 'morgan';
import http from 'http';
import { Server as SocketIOServer } from 'socket.io';

// .env dosyasÄ±ndaki ortam deÄŸiÅŸkenlerini yÃ¼kle
dotenv.config();

const app = express();
const server = http.createServer(app);  // Express'i HTTP sunucusuna sarÄ±yoruz
const io = new SocketIOServer(server, {
    cors: {
        origin: "http://localhost:3000",  // Next.js frontend'inizin adresi
        methods: ["GET", "POST"],
    },
});  // Socket.IO sunucusunu baÅŸlatÄ±yoruz
const PORT: number = Number(process.env.PORT) || 5000;

// Middleware'ler
app.use(express.json());  // JSON veri desteÄŸi
app.use(cors());  // CORS desteÄŸi
app.use(morgan('dev'));  // Loglama

// Socket.IO baÄŸlantÄ±larÄ±
io.on('connection', (socket) => {
    console.log('Bir kullanÄ±cÄ± baÄŸlandÄ±!');

    // Mesaj alÄ±ndÄ±ÄŸÄ±nda
    socket.on('message', (msg: string) => {
        console.log('Mesaj alÄ±ndÄ±:', msg);
        socket.emit('message', 'Sunucudan gelen cevap: ' + msg);  // KullanÄ±cÄ±ya cevap gÃ¶nder
    });

    // BaÄŸlantÄ± kapatÄ±ldÄ±ÄŸÄ±nda
    socket.on('disconnect', () => {
        console.log('Bir kullanÄ±cÄ± baÄŸlantÄ±yÄ± kesti!');
    });
});

// Ã–rnek Ana Route
app.get('/', (req: Request, res: Response): void => {
    res.send('Express.js Sunucusu Ã‡alÄ±ÅŸÄ±yor ðŸš€');
});

// Sunucuyu BaÅŸlat
server.listen(PORT, (): void => {
    console.log(`âœ… Sunucu ${PORT} portunda Ã§alÄ±ÅŸÄ±yor...`);
});
